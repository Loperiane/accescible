 * {
  box-sizing:border-box
}

body {
  font-family: Verdana,sans-serif;
  margin:auto;
  max-width: 100%;
  background: #fff;

}

/* Slideshow container */

.slideshow-container {
  max-width: 500px;
  position: relative;
  margin: auto;
  margin-top:5%;
}

/* Caption text */
.text {
  color: rgb(233,95,3);
  font-size: 15px;
  font-weight: bold;
  position: absolute;
  width: 100%;
  text-align: center;
  overflow: auto;
}


/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

/* The dots/bullets/indicators */
.dot {
  height: 13px;
  width: 13px;
  margin: 0 2px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
  transition: background-color 0.6s ease;
}

.active {
  background-color: #717171;
}

.fade {
  -webkit-animation-name: fade;
  -webkit-animation-duration: 2s;
  animation-name: fade;
  animation-duration: 2s;
}
/* Fading animation */
@-webkit-keyframes fade {
  from {opacity: .6}
  to {opacity: 1}
}

@keyframes fade {
  from {opacity: .6}
  to {opacity: 1}
}


/*BOUTON CONN, INSCRIPTION, SE CONNECTER ETC*/
.FormConn{
  margin-top: 10%;
}
.button {
  background-color:rgb(241,240,240);
  width: auto;
  border-radius: 12px;
  border: 1px solid rgb(147,188,218);
  padding: 15px 32px;
  margin : 8px;
  text-decoration: none;
  font-size: 26px;
  font-weight: bold;
  cursor: pointer;
}
.connexion {
  color: rgb(4,90,149);
  margin : 6px;
}
.inscription {
  color:rgb(223,74,16);
  margin : 6px;
}
.button:hover {
    box-shadow: 0 12px 16px 0 rgba(34,112,155,0.3);
}

/* On smaller screens, decrease text size */
@media only screen and (max-width: 421px) {
  .text{font-size: 10px}
  .button {font-size:14px}
  .inscription {margin-top :8px}
  .dot{
    height: 9px;
    width: 9px;
  }
@media only screen and (max-width: 250px) {
  .text{font-size: 7px}
  .button {font-size:11px}
  .inscription {margin-top :8px}
  .dot{
    height: 6px;
    width: 6px;
  }

/*#conteneur1 {
  display:flex;
  flex-direction: column;
  align-items: center;
  flex-wrap: nowrap;
  align-content: center;
}
.button {
  background-color:rgb(193,23,27);
  border-radius: 1.1vw;
  border: 0.25vw solid rgb(142,8,69);
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  font-size: 1.2vw;
  cursor: pointer;
}
.connexion {
  background-color: rgba(219,201,134,1);
  color: rgb(34,112,155);
  font-weight: bold;
}
.inscription {
    background-color: rgba(198,95,111,1);
    color:rgb(157,204,80);
    font-weight: bold;
}
.button:hover {
    box-shadow: 0 12px 16px 0 rgba(34,112,155,0.3);
}




rgba(226,203,181,1)
background: -webkit-linear-gradient(90deg, rgba(198,95,111,1), rgba(219,201,134,1));
background: -o-linear-gradient(90deg, rgba(198,95,111,1), rgba(219,201,134,1));
background: -moz-linear-gradient(90deg, rgba(198,95,111,1), rgba(219,201,134,1));
background: linear-gradient(90deg, rgba(198,95,111,0.7),rgba(226,203,181,1), rgba(219,201,134,0.7));

*************************************************************************************************************************
PROPERTIES/ VALUES;
..........................................................................................................................

**********DISPLAY***************
block-level element =  commence toujours sur une nouvelle ligne et prend toute la largeur disponible
                      ( étend à gauche et à droite aussi loin que possible )
 it's:
    <div>
    <h1> - <h6>
    <p>
    <form>
    <header>
    <footer>
    <section>
    <li>

inline element : don't start on the new line and take and only takes up as much width as necessary.
              <span>
              <a>
              <img>

=> you can change nature of element (block or inline) but isn't modify totaly, it's just once for him

display: none; = to hidden an element [is commonly used with JavaScript] but still afect layout
visibility:hidden; = idem
width : ; to prevent it streching out to edges of its container.
  + margin : auto; (horizontaly center)
PB = none responsive
  => Solution = max-width :; + margin: auto;


=> display : flex; http://www.w3schools.com/css/css3_flexbox.asp

**************************Responsive Web Design -***********************
 The Viewport :ke control over the viewport, through the <meta> tag
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

Users are used to scroll websites vertically ONLY =>Some additional rules to follow:
1. Do NOT use large fixed width elements -
2. Do NOT let the content rely on a particular viewport width to render well -
3. Use CSS media queries to apply different styling for small and large screens -

************ POSITION PROPERTIES ************
  = type of positionning method for element using T, B, L, R poperties + this proprietie MUST definied first;

  position:static; = by default + not affected by T, R, B, L properties = t is always positioned according to the normal flow of the page:

position : relative; = compared to normal position and take attention of T, B, L, R propieties
position : fixed; = means it always stays in the same place
position : absolute; =is positioned relative to the nearest positioned ancestorwhich havent static position;

z-index : ; to prevent overlap element;

*************float and clear***************
float : T, B, l, R; = In its simplest use, the float property can be used to wrap text around images.
    - display: inline-block; is better now
clear: T, B, l, R; = The clear property is used to control the behavior of floating elements compared

overflow: auto; = to repair If an element is taller than the element containing it, and it is floated, it will overflow outside of its container.

*************OTHER THINGS***************
margin: auto;, to horizontally center an element within its container.
  Center aligning has no effect if the width property is not set (or set to 100%).

Align element on the left ou Right=> use position: absolute; (ex: position )
  Note: Absolute positioned elements are removed from the normal flow, and can overlap elements.
  Tip: When aligning elements with position, always define margin and padding for the <body> element.
  This is to avoid visual differences in different browsers.

Tip: When aligning elements with float, always define margin and padding for the <body> element.
This is to avoid visual differences in different browsers.

***************BOX MODEL*********************
box model : content < padding < border < margin

Outline = line drawn around an element - outside the border. This can be use to make an element "stand out".
outline-style : dotted - Defines a dotted outline
                dashed - Defines a dashed outline
                solid - Defines a solid outline
                double - Defines a double outline
                groove - Defines a 3D grooved outline. The effect depends on the outline-color value
                ridge - Defines a 3D ridged outline. The effect depends on the outline-color value
                inset - Defines a 3D inset outline. The effect depends on the outline-color value
                outset - Defines a 3D outset outline. The effect depends on the outline-color value
                none - Defines no outline
                hidden - Defines a hidden outline
ouline-color: ;
outline-width: ;



******MARGIN************

cannot have a background color!

Values (V) : auto - the browser calculates the margin (hotizontaly center)
            length - specifies a margin in px, pt, cm, etc.
            % - specifies a margin in % of the width of the containing element
            inherit - specifies that the margin should be inherited from the parent element

margin-top: 100px;
    margin-bottom: 100px;
    margin-right: 150px;
    margin-left: 80px;
shorthand = margin : VT VR VB VL ;
            margin : VTVB VRVL ;

*******BORDER**********
border-width: px;
              medium;
              px, px, px, px; (top, right, bottom, left)

border-style:dotted;
            dotted - Defines a dotted border
            dashed - Defines a dashed border
            solid - Defines a solid border
            double - Defines a double border
            groove - Defines a 3D grooved border. The effect depends on the border-color value
            ridge - Defines a 3D ridged border. The effect depends on the border-color value
            inset - Defines a 3D inset border. The effect depends on the border-color value
            outset - Defines a 3D outset border. The effect depends on the border-color value
            none - Defines no border
            hidden - Defines a hidden border
border-style: dotted solid double dashed;(top, right, bottom, left)

border-color: red green blue yellow; (top, right, bottom, left)

shorthand = border : Vwidth Vstyle Vcolor
individual (ex) = border-style : VT VR VB VL
                  border-style : VT&VB VR&VL

  //CSS3//
border-radius: T R B L;
border-image: http://www.w3schools.com/css/css3_border_images.asp


*********PADDING***********
IDEM MARGING except:
  - Padding is affected by background color
  - you haven't values "auto"

************DIMENSION PROPERTIES (Height (H) Width(W))**************
 - px,cm or % of the containing block
 - by defaut = "auto"
 - they don't include padding, borders or margins = it's only area inside the the pading
 - max-width : () needs to do responsive (+ margin: auto);
 - width and height on element  = width or height (content) + padding + border

------------CSS 3
box-sizing : border-box; =  width and height on element it's that who defined (padding and border are include)
    for the all element : * {
    box-sizing: border-box;
    }
  Attention, doesnt work for somme element like, you need for it  :
    input, texarea {
    width: 100%;
    }


****************EFFECT COLOR OU TRANSITION*********
CSS3 =
rgba (a = alpha for transparency from 0 to 1, like opacity)

Linear gradient : (fondu de color)
  background: linear-gradient(direction, color-stop1, color-stop2, ...);
    rgba for transparency or name color + %
    direction = direction-word or degres
      Top to Bottom (this is default) = 0deg or 360 deg;
      left to right = 90 deg
      bottom to top = 180 deg;
      right to left = 270 deg;

      Top to Bottom
    background: red; For browsers that do not support gradients
    background: -webkit-linear-gradient(red, yellow);  For Safari 5.1 to 6.0
    background: -o-linear-gradient(red, yellow); For Opera 11.1 to 12.0
    background: -moz-linear-gradient(red, yellow);  For Firefox 3.6 to 15
    background: linear-gradient(red, yellow);  Standard syntax (must be last)

    Left to Right:
    background: linear-gradient(to right, red, yellow); Standard syntax (must be last) + idem except the "to" and
      except safari direction = the depature point;
    DIAGONAL
    background: linear-gradient(to bottom right, red, yellow); Standard syntax (must be last) + idem top
      except safari direction = the depature point;

    REPEATING
    background: repeating-linear-gradient(red, yellow 10%, green 20%);Standard syntax (must be last)

Radial Gradients : is defined by its center
    background: radial-gradient(shape size at position, start-color, ..., last-color);
        _ use rgba or name color + %
        _ for shape use the name (circle; )/ by defaut is ellipse
          or closest-side, farthest-side, closest-corner farthest-corner
          background: -webkit-radial-gradient(60% 55%, closest-side, red, yellow, black);  Safari 5.1 to 6.0
          background: -o-radial-gradient(60% 55%, closest-side, red, yellow, black);  For Opera 11.6 to 12.0
          background: -moz-radial-gradient(60% 55%, closest-side, red, yellow, black); For Firefox 3.6 to 15
          background: radial-gradient(closest-corner at 60% 55%, red, yellow, black);  Standard syntax (must be last)
        _ use repeating
            background: repeating-radial-gradient(red, yellow 10%, green 15%); Standard syntax (must be last)

Shadow Effects
  text-shadow
  box-shadow ( box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);)

TRANSITION : you must define 1/wiche part(Or partS) to affect And duration; 2/the effet on the part
  1/ div {
    width: 100px;
    height: 100px;
    background: red;
    -webkit-transition: width 2s;
    transition: width 2s;
      }
 2/ div:hover {
    width: 300px;
  }
  3/ the speed curve of the transition effect add:
        transition-timing-function: linear or ease (-in, -out, -in-out)

  4/  transition-delay property specifies a delay (in seconds) for the transition effect.
      -webkit-transition-delay: 1s;
      transition-delay: 1s;

  5/ Combinaison with transform
      div {
      -webkit-transition: width 2s, height 2s, -webkit-transform 2s;
      transition: width 2s, height 2s, transform 2s;
      }
      div:hover {
          width: 300px;
          height: 300px;
          -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
      }

    6/ Shorthand transition : Vparttochange Vduration Vtimingfunction Vdelay
        {
        transition: width 2s linear 1s;
      }


ANIMATION : http://www.w3schools.com/css/css3_animations.asp
      div {
          width: 100px;
          height: 100px;
          background-color: red;
          position: relative;
           Chrome, Safari, Opera
          -webkit-animation-name: example;
          -webkit-animation-duration: 5s;
          -webkit-animation-timing-function: linear;
          -webkit-animation-delay: 2s;
          -webkit-animation-iteration-count: infinite;
          -webkit-animation-direction: alternate;
           Standard syntax
          animation-name: example;
          animation-duration: 5s;
          animation-timing-function: linear;
          animation-delay: 2s;
          animation-iteration-count: infinite;
          animation-direction: alternate;
      } OR SHORTHAND : -webkit-animation: myfirst 5s linear 2s infinite alternate;
                        animation: myfirst 5s linear 2s infinite alternate;
     Chrome, Safari, Opera
  +    @-webkit-keyframes example {
          0%   {background-color:red; left:0px; top:0px;}
          25%  {background-color:yellow; left:200px; top:0px;}
          50%  {background-color:blue; left:200px; top:200px;}
          75%  {background-color:green; left:0px; top:200px;}
          100% {background-color:red; left:0px; top:0px;}
      }

      Standard syntax
      @keyframes example {
          0%   {background-color:red; left:0px; top:0px;}
          25%  {background-color:yellow; left:200px; top:0px;}
          50%  {background-color:blue; left:200px; top:200px;}
          75%  {background-color:green; left:0px; top:200px;}
          100% {background-color:red; left:0px; top:0px;}
      }


**************TRANSFORM 2D AND 3D***************
2D
 translate : oves an element from its current position
   div {
     -ms-transform: translate(50px,100px);  IE 9
     -webkit-transform: translate(50px,100px); Safari
     transform: translate(50px,100px);
      }
  rotate() method rotates an element clockwise or counter-clockwise according to a given degree.
    div {
   -ms-transform: rotate(20deg); IE 9
   -webkit-transform: rotate(20deg);  Safari
   transform: rotate(20deg);
  }

scale() method increases or decreases the size of an element
  div {
    -ms-transform: scale(2,3);
    -webkit-transform: scale(2,3);
    transform: scale(2,3);
  }

 skewX() method skews an element along the X-axis by the given angle.
   div {
       -ms-transform: skewX(20deg);
       -webkit-transform: skewX(20deg); /
       transform: skewX(20deg);
   }

  skewY() : idem skewX() but on Yaxis;
  skew(Xdeg, Ydeg): idem but parapeter ar Xdeg, Ydeg

  matrix() method combines all the 2D transform methods into one
      matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())

3D
http://www.w3schools.com/css/css3_3dtransforms.asp
  rotateX() method rotates an element around its X-axis at a given degree
      div {
        -webkit-transform: rotateX(150deg);
        transform: rotateX(150deg);
      }
  rotateY()
  rotateZ()









*******BACKROUND********
background-color: ; CSS3 = rgba (a = alpha for transparency from 0 to 1)
background-image:url("");
background-repeat: repeat-y;
background-repeat: repeat-x;
background-repeat: no-repeat;
background-attachment: fixed;
background-position: right top;
shorthand = background: Vcolor Vimage Vrepeat Vattachement Vposition;

  //CSS3//
Multiple background image
  background-image:url("") Vrepeat Vposition, url("") Vrepeat Vposition = first image is closest viewer

Resize background image
  background-size : xpx ypx;
              or  : contain; = H & L de l'image seront dans l'element background
              or : cover; = recouvre tout l'element background de l'image,
Resize multiple image
  background-size : Vfirstimage , Vsecondimage, ;

background-origin:border-box; = specify that the background img start left corner of the border
                :padding-box; = by defaut
                :content-box; =

background-clip property specifies the painting area of the background

******************* Opacity / Transparency*************************
opacity: 0.6;
filter: alpha(opacity=100); / For IE8 and earlier /


********TEXT FORMATING*********
color: ;
text-align : ; (just horizontal: L, R, C or justified)
text-decoration:none; (used to set or remove decorations from text)
text-transform : uppercase;
                 lowercase;
                capitalize;
text-indentation : px;
letter-spacing: px;
line-height : 1.8; (space between lines)
text-direction: rtl;= R to L
                ltr
text-shadow: 1px 1px 1px color = (x direction), (y direction) (blur) (color)

word-spacing : px;
letter-spacing: ;
white-spacing: ; Value = nomal, inherit, nowrap ( it's to handle white-space in element)

--------CSS3
    text-overflow (text-overflow: clip or ellipsis)
    word-wrap (word-wrap: break-word;) allows long words to be able to be broken and wrap onto the next line.
    word-break (word-break: break-all; or keep-all) specifies line breaking rules.


***********FONTS********
font-family: ; (fallback system: font-family, font-family if the first fall, generic family if the both fall )
            generic family // Font-Family
              Serif : "Times New Roman" Georgia
              Sans Serif : Arial Verdana
              Monospace:Courier New  Lucida Console
font-style : ; (V = normal, italic, oblique)
font-size : ; (absolute: px or relative: em, %, vw) + default size for text, like  = 16px=1em
              solution works in all  = body {font-size : 100%;} other element {font-size : em;)
font-weight: ; (V= normal or bold)
font-variant :; (V = normal or small-caps (to convert letter in uppercase))

-------CSS3-----
Your "own" fonts are defined within the CSS3 @font-face rule.
  Some standart: TrueType Fonts (TTF) ; OpenType Fonts (OTF) ; The Web Open Font Format (WOFF)
  or what you whant:
  @font-face {
  font-family: myFirstFont;
  src: url(sansation_light.woff);
  }
  div {
  font-family: myFirstFont;
  }

  BOLF ON NEW FONT:You must add another @font-face rule containing descriptors for bold text:
  @font-face {
    font-family: myFirstFont;
    src: url(sansation_bold.woff);
    font-weight: bold;
    }


ON THE SPECIFIC ELEMENT
***********LINKS*************
    a:link: ; (a normal, unvisited link)
    a:visited: ;(a link the user has visited)
    a:hover: ; (- a link when the user mouses over it,  MUST come after a:link and a:visited)
    a:active: ; (- a link the moment it is clicked, MUST come after a:hover)
use other properties (H, W; color : ; text-decoration:;bakground-color: ;)

************Lists (ul, ol, li)************
list-style-type: ; (V none or for ul = circle, square, )
                          V for ol = upper-romain ; lovwer-alpha);
list-style-position: ; (V inside or outside)
list-style-image: url("") ; (image comme puce)
Shortland = life-style: Vtype Vposition Vimage
use other properties (H, W; color : ; text-decoration:;bakground-color: ;)

**************Navigation Bar = List of Links***************************
html:
    <ul>
    <li><a href="">Home</a></li>
    <li><a href="">News</a></li>
    <li><a href="">Contact</a></li>
    <li><a href="">About</a></li>
    </ul>
css:
  Vertical Navigation Bar
      ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
      width: 25%;
      background-color: #f1f1f1;
      height: 100%;  Full height
      position: fixed;  Make it stick, even on scroll
      overflow: auto;  Enable scrolling if the sidenav has too much content
      }

      li a {
        display: block;
        color: #000;
        padding: 8px 0 8px 16px;
        text-decoration: none;
        }
      li {
      text-align: center;
      border-bottom: 1px solid #555;
      }

      li:last-child {
          border-bottom: none;
      }

      li a.active {
          background-color: #4CAF50;
          color: white;
      }

      li a:hover:not(.active) {
          background-color: #555;
          color: white;
      }

  Horizontal Navigation Bar
      ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
      overflow: hidden;
      background-color: #333;
      position: fixed;
      top: 0;
      width: 100%;
      }

      li {
      float: left;
      }

      li a {
      display: block;
      color: white;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
      }

      li a:hover:not(.active) {
      background-color: #111;
      }

      .active {
      background-color: #4CAF50;
      }

***************DROPDOWN*************************
 Style The Dropdown Button
.dropbtn {
    background-color: #4CAF50;
    color: white;
    padding: 16px;
    font-size: 16px;
    border: none;
    cursor: pointer;
}

 The container <div> - needed to position the dropdown content
.dropdown {
    position: relative;
    display: inline-block;
}

 Dropdown Content (Hidden by Default)
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
}

 Links inside the dropdown
.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

 Change color of dropdown links on hover
.dropdown-content a:hover {background-color: #f1f1f1}

 Show the dropdown menu on hover
.dropdown:hover .dropdown-content {
    display: block;
}

 Change the background color of the dropdown button when the dropdown content is shown
.dropdown:hover .dropbtn {
    background-color: #3e8e41;
}

*********CSS Tooltip***************
.tooltip {
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;
    position: absolute;
    z-index: 1;
    top: -5px;
    left: 110%;
}

.tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 50%;
    right: 100%;
    margin-top: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent black transparent transparent;
}
.tooltip:hover .tooltiptext {
    visibility: visible;
}

*************IMAGE********************
http://www.w3schools.com/css/css3_images.asp

****************BUTTON****************************
http://www.w3schools.com/css/css3_images.asp

*****************PAGINATION****************
http://www.w3schools.com/css/css3_pagination.asp

***********COLUMNS************
http://www.w3schools.com/css/css3_multiple_columns.asp

***************CSS3 Media Queries******************
http://www.w3schools.com/css/css3_mediaqueries.asp


************TABLES (table, th (titre colonne), td(case), tr (line)****************
border: ; (+ -T, R, B, L)
border- collapse: collapse;
th {text-align: ;} (V = default = center, L R)
td {vertical-align: ;} (top, bottom, middle)
use other properties (H, W; backround-color; color : ; text-decoration:;bakground-color: ;)
tr :hover {background-color ;}
tr:nth-child(even){background-color: ;} (=zebra-striped)
table in div for scroll = div { overflow-x: auto;}
